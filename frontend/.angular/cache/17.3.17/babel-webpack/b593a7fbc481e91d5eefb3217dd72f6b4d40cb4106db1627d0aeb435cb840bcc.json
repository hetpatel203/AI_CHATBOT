{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nlet AppComponent = class AppComponent {\n  constructor(http) {\n    this.http = http;\n    this.messages = [];\n    this.inputMessage = '';\n    this.loading = false;\n  }\n  sendMessage() {\n    if (!this.inputMessage.trim()) return;\n    this.messages.push({\n      type: 'user',\n      content: this.inputMessage\n    });\n    this.loading = true;\n    this.http.post('http://localhost:8002/api/chat', {\n      message: this.inputMessage\n    }).subscribe({\n      next: res => {\n        this.messages.push({\n          type: 'bot',\n          content: res.response\n        });\n        this.loading = false;\n      },\n      error: () => {\n        this.messages.push({\n          type: 'bot',\n          content: 'Error connecting to server'\n        });\n        this.loading = false;\n      }\n    });\n    this.inputMessage = '';\n  }\n};\nAppComponent = __decorate([Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [CommonModule, FormsModule],\n  template: `\n    <div class=\"container\">\n      <h1>AI Financial Advisor</h1>\n      \n      <div class=\"chat-box\">\n        <div *ngFor=\"let msg of messages\" [class]=\"'message ' + msg.type\">\n          <strong>{{msg.type === 'user' ? 'You' : 'AI'}}:</strong> {{msg.content}}\n        </div>\n      </div>\n      \n      <div class=\"input-area\">\n        <input [(ngModel)]=\"inputMessage\" \n               (keyup.enter)=\"sendMessage()\"\n               placeholder=\"Ask about budgeting, investing, etc.\">\n        <button (click)=\"sendMessage()\" [disabled]=\"loading\">Send</button>\n      </div>\n    </div>\n  `,\n  styles: [`\n    .container { max-width: 600px; margin: 20px auto; padding: 20px; }\n    h1 { text-align: center; color: #333; }\n    .chat-box { \n      height: 300px; \n      border: 1px solid #ddd; \n      padding: 10px; \n      overflow-y: auto; \n      margin: 20px 0;\n      background: #f9f9f9;\n    }\n    .message { margin: 10px 0; padding: 8px; border-radius: 5px; }\n    .message.user { background: #e3f2fd; }\n    .message.bot { background: #f1f8e9; }\n    .input-area { display: flex; gap: 10px; }\n    input { flex: 1; padding: 10px; border: 1px solid #ddd; border-radius: 4px; }\n    button { padding: 10px 20px; background: #007bff; color: white; border: none; border-radius: 4px; cursor: pointer; }\n    button:disabled { opacity: 0.5; }\n  `]\n})], AppComponent);\nexport { AppComponent };","map":{"version":3,"names":["CommonModule","FormsModule","AppComponent","constructor","http","messages","inputMessage","loading","sendMessage","trim","push","type","content","post","message","subscribe","next","res","response","error","__decorate","Component","selector","standalone","imports","template","styles"],"sources":["C:\\Users\\het_p\\Desktop\\chatbot\\frontend\\src\\app\\app.component.ts"],"sourcesContent":["\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [CommonModule, FormsModule],\n  template: `\n    <div class=\"container\">\n      <h1>AI Financial Advisor</h1>\n      \n      <div class=\"chat-box\">\n        <div *ngFor=\"let msg of messages\" [class]=\"'message ' + msg.type\">\n          <strong>{{msg.type === 'user' ? 'You' : 'AI'}}:</strong> {{msg.content}}\n        </div>\n      </div>\n      \n      <div class=\"input-area\">\n        <input [(ngModel)]=\"inputMessage\" \n               (keyup.enter)=\"sendMessage()\"\n               placeholder=\"Ask about budgeting, investing, etc.\">\n        <button (click)=\"sendMessage()\" [disabled]=\"loading\">Send</button>\n      </div>\n    </div>\n  `,\n  styles: [`\n    .container { max-width: 600px; margin: 20px auto; padding: 20px; }\n    h1 { text-align: center; color: #333; }\n    .chat-box { \n      height: 300px; \n      border: 1px solid #ddd; \n      padding: 10px; \n      overflow-y: auto; \n      margin: 20px 0;\n      background: #f9f9f9;\n    }\n    .message { margin: 10px 0; padding: 8px; border-radius: 5px; }\n    .message.user { background: #e3f2fd; }\n    .message.bot { background: #f1f8e9; }\n    .input-area { display: flex; gap: 10px; }\n    input { flex: 1; padding: 10px; border: 1px solid #ddd; border-radius: 4px; }\n    button { padding: 10px 20px; background: #007bff; color: white; border: none; border-radius: 4px; cursor: pointer; }\n    button:disabled { opacity: 0.5; }\n  `]\n})\nexport class AppComponent {\n  messages: any[] = [];\n  inputMessage = '';\n  loading = false;\n\n  constructor(private http: HttpClient) {}\n\n  sendMessage() {\n    if (!this.inputMessage.trim()) return;\n\n    this.messages.push({ type: 'user', content: this.inputMessage });\n    this.loading = true;\n\n    this.http.post<any>('http://localhost:8002/api/chat', { message: this.inputMessage })\n      .subscribe({\n        next: (res) => {\n          this.messages.push({ type: 'bot', content: res.response });\n          this.loading = false;\n        },\n        error: () => {\n          this.messages.push({ type: 'bot', content: 'Error connecting to server' });\n          this.loading = false;\n        }\n      });\n\n    this.inputMessage = '';\n  }\n}"],"mappings":";AACA,SAASA,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,WAAW,QAAQ,gBAAgB;AA6CrC,IAAMC,YAAY,GAAlB,MAAMA,YAAY;EAKvBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAJxB,KAAAC,QAAQ,GAAU,EAAE;IACpB,KAAAC,YAAY,GAAG,EAAE;IACjB,KAAAC,OAAO,GAAG,KAAK;EAEwB;EAEvCC,WAAWA,CAAA;IACT,IAAI,CAAC,IAAI,CAACF,YAAY,CAACG,IAAI,EAAE,EAAE;IAE/B,IAAI,CAACJ,QAAQ,CAACK,IAAI,CAAC;MAAEC,IAAI,EAAE,MAAM;MAAEC,OAAO,EAAE,IAAI,CAACN;IAAY,CAAE,CAAC;IAChE,IAAI,CAACC,OAAO,GAAG,IAAI;IAEnB,IAAI,CAACH,IAAI,CAACS,IAAI,CAAM,gCAAgC,EAAE;MAAEC,OAAO,EAAE,IAAI,CAACR;IAAY,CAAE,CAAC,CAClFS,SAAS,CAAC;MACTC,IAAI,EAAGC,GAAG,IAAI;QACZ,IAAI,CAACZ,QAAQ,CAACK,IAAI,CAAC;UAAEC,IAAI,EAAE,KAAK;UAAEC,OAAO,EAAEK,GAAG,CAACC;QAAQ,CAAE,CAAC;QAC1D,IAAI,CAACX,OAAO,GAAG,KAAK;MACtB,CAAC;MACDY,KAAK,EAAEA,CAAA,KAAK;QACV,IAAI,CAACd,QAAQ,CAACK,IAAI,CAAC;UAAEC,IAAI,EAAE,KAAK;UAAEC,OAAO,EAAE;QAA4B,CAAE,CAAC;QAC1E,IAAI,CAACL,OAAO,GAAG,KAAK;MACtB;KACD,CAAC;IAEJ,IAAI,CAACD,YAAY,GAAG,EAAE;EACxB;CACD;AA3BYJ,YAAY,GAAAkB,UAAA,EA1CxBC,SAAS,CAAC;EACTC,QAAQ,EAAE,UAAU;EACpBC,UAAU,EAAE,IAAI;EAChBC,OAAO,EAAE,CAACxB,YAAY,EAAEC,WAAW,CAAC;EACpCwB,QAAQ,EAAE;;;;;;;;;;;;;;;;;GAiBT;EACDC,MAAM,EAAE,CAAC;;;;;;;;;;;;;;;;;;GAkBR;CACF,CAAC,C,EACWxB,YAAY,CA2BxB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}